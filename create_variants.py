#!/usr/bin/env python3
"""
Create MYH7 variant YAML files for Boltz-2 structure prediction
"""

# MYH7 wild-type sequence (UniProt P12883)
MYH7_SEQUENCE = """MGDSEMAVFGAAAPYLRKSEKERLEAQTRPFDLKKDVFVPDDKQEFVKAKIVSREGGKVTAETEYGKTVTVKEDQVMQQNPPKFDKIEDMAMLTFLHEPAVLYNLKDR
YGSWMIYTYSGLFCVTVNPYKWLPVYTPEVVAAYRGKKRSEAPPHIFSISDNAYQYMLTDRENQSILITGESGAGKTVNTKRVIQYFAVIAAIGDRSKKDQSPGKGTL
EDQIIQANPALEAFGNAKTVRNDNSSRFGKFIRIHFGATGKLASADIETYLLEKSRVIFQLKAERDYHIFYQILSNKKPELLDMLLITNNPYDYAFISQGETTVASID
DAEELMATDNAFDVLGFTSEEKNSMYKLTGAIMHFGNMKFKLKQREEQAEPDGTEEADKSAYLMGLNSADLLKGLCHPRVKVGNEYVTKGQNVQQVIYATGALAKAVY
ERMFNWMVTRINATLETKQPRQYFIGVLDIAGFEIFDFNSFEQLCINFTNEKLQQFFNHHMFVLEQEEYKKEGIEWTFIDFGMDLQACIDLIEKPMGIMSILEEECMF
PKATDMTFKAKLFDNHLGKSANFQKPRNIKGKPEAHFSLIHYAGIVDYNIIGWLQKNKDPLNETVVGLYQKSSLKLLSTLFANYAGADAPIEKGKGKAKKGSSFQTVS
ALHRENLNKLMTNLRSTHPHFVRCIIPNETKSPGVMDNPLVMHQLRCNGVLEGIRICRKGFPNRILYGDFRQRYRILNPAAIPEGQFIDSRKGAEKLLSSLDIDHNQY
KFGHTKVFFKAGLLGLLEEMRDERLSRIITRIQAQSRGVLARMEYKKLLERRDSLLVIQWNIRAFMGVKNWPWMKLYFKIKPLLKSAEREKEMASMKEEFTRLKEALE
KSEARRKELEEKMVSLLQEKNDLQLQVQAEQDNLADAEERCDQLIKNKIQLEAKVKEMNERLEDEEEMNAELTAKKRKLEDECSELKRDIDDLELTLAKVEKEKHATE
NKVKNLTEEMAGLDEIIAKLTKEKKALQEAHQQALDDLQAEEDKVNTLTKAKVKLEQQVDDLEGSLEQEKKVRMDLERAKRKLEGDLKLTQESIMDLENDKQQLDERL
KKKDFELNALNARIEDEQALGSQLQKKLKELQARIEELEEELEAERTARAKVEKLRSDLSRELEEISERLEEAGGATSVQIEMNKKREAEFQKMRRDLEEATLQHEAT
AAALRKKHADSVAELGEQIDNLQRVKQKLEKEKSEFKLELDDVTSNMEQIIKAKANLEKMCRTLEDQMNEHRSKAEETQRSVNDLTSQRAKLQTENGELSRQLDEKEA
LISQLTRGKLTYTQQLEDLKRQLEEEVKAKNALAHALQSARHDCDLLREQYEEETEAKAELQRVLSKANSEVAQWRTKYETDAIQRTEELEEAKKKLAQRLQEAEEAV
EAVNAKCSSLEKTKHRLQNEIEDLMVDVERSNAAAAALDKKQRNFDKILAEWKQKYEESQSELESSQKEARSLSTELFKLKNAYEESLEHLETFKRENKNLQEEISDL
TEQLGSSGKTIHELEKVRKQLEAEKMELQSALEEAEASLEHEEGKILRAQLEFNQIKAEIERKLAEKDEEMEQAKRNHLRVVDSLQTSLDAETRSRNEALRVKKKMEG
DLNEMEIQLSHANRMAAEAQKQVKSLQSLLKDTQIQLDDAVRANDDLKENIAIVERRNNLLQAELEELRAVVEQTERSRKLAEQELIETSERVQLLHSQNTSLINQKK
KMDADLSQLQTEVEEAVQECRNAEEKAKKAITDAAMMAEELKKEQDTSAHLERMKKNMEQTIKDLQHRLDEAEQIALKGGKKQLQKLEARVRELENELEAEQKRNAES
VKGMRKSERRIKELTYQTEEDRKNLLRLQDLVDKLQLKVKAYKRQAEEAEEQANTNLSKFRKVQHELDEAEERADIAESQVNKLRAKSRDIGTKGLNEE""".replace('\n', '')

# Top pathogenic variants to generate
VARIANTS = [
    {"name": "Gly584Arg", "position": 584, "from_aa": "G", "to_aa": "R", "alphamissense": 0.9951},
    {"name": "Arg249Gln", "position": 249, "from_aa": "R", "to_aa": "Q", "alphamissense": 0.9779}, 
    {"name": "Arg453Cys", "position": 453, "from_aa": "R", "to_aa": "C", "alphamissense": 0.9658},
    {"name": "Phe513Cys", "position": 513, "from_aa": "F", "to_aa": "C", "alphamissense": 0.9989},
    {"name": "Gly256Glu", "position": 256, "from_aa": "G", "to_aa": "E", "alphamissense": 0.9992}
]

def create_variant_sequence(wt_sequence, position, new_aa):
    """Create variant sequence with amino acid substitution"""
    sequence_list = list(wt_sequence)
    sequence_list[position - 1] = new_aa  # Convert to 0-based indexing
    return ''.join(sequence_list)

def create_yaml_file(variant_name, sequence):
    """Create YAML file for Boltz-2 prediction"""
    yaml_content = f"""sequences:
  - protein:
      id: A
      sequence: >
        {sequence}
"""
    
    filename = f"variant_{variant_name.lower()}.yaml"
    with open(filename, 'w') as f:
        f.write(yaml_content)
    print(f"Created {filename}")

# Generate all variant YAML files
for variant in VARIANTS:
    print(f"Creating {variant['name']} (AlphaMissense: {variant['alphamissense']})")
    
    # Verify the original amino acid at the position
    original_aa = MYH7_SEQUENCE[variant['position'] - 1]
    if original_aa != variant['from_aa']:
        print(f"WARNING: Expected {variant['from_aa']} at position {variant['position']}, found {original_aa}")
    
    # Create variant sequence
    variant_sequence = create_variant_sequence(MYH7_SEQUENCE, variant['position'], variant['to_aa'])
    
    # Create YAML file
    create_yaml_file(variant['name'], variant_sequence)

print("\nâœ… All variant YAML files created!")
print("ðŸš€ Ready to run Boltz-2 predictions!") 